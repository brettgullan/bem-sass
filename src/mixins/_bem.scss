// ==============================
// 
//         Mixins - BEM
//
// ============================== 

// Set BEM configurations 
// @param { map } a BEM separator map (e.g (element: "__", modifier: "_"))
@mixin configure-BEM($map:null) {

  $defaults: (
    block-prefix-default: "",
    block-types: (),
    element-sep: "__",
    modifier-sep: "_"
  );

  @if ($map) {
    $defaults: map-merge($defaults, $map);
  } 

  $__BEM-block-prefix-default__: map-get($defaults, "block-prefix-default") !global;
  $__BEM-block-types__: map-get($defaults, "block-types") !global;
  $__BEM-element-sep__: map-get($defaults, "element-sep") !global;
  $__BEM-modifier-sep__: map-get($defaults, "modifier-sep") !global;
}

// Generate BEM block selector 
// It is recommended to register an alias first to use this mixin
//
// @example
//    @mixin b($name) {
//      @include make-BEM-block($name, $prefix: "b-") {
//        @content;
//      }
//    }
@mixin make-BEM-block($name, $prefix: "b-") {
  .#{$prefix}#{$name} {
    @content;
  }
}

@mixin block($name, $type:null) {
  .#{get-BEM-block-prefix-by-type($type)}#{$name} {
    @content;
  } 
}


// Generate BEM element selector 
// It is recommended to register an alias first to use this mixin
//
// @example
//    @mixin e($name) {
//      @include element($name) {
//        @content;
//      }
//    }
@mixin element($name) {

  @if (& == null) {
    @error "element cannot be declared ouside of a block"
  }

  @if (is-BEM-elem(&)) {
    @error "element cannot be declared in another element"
  }

  @at-root {
    #{make-BEM-element-selector($name, is-BEM-mod(&))} {
      @content;
    }
  }
}


// Generate BEM modifier selector 
// It is recommended to register an alias first to use this mixin
//
// @example
//    @mixin m($name) {
//      @include modifier($name) {
//        @content;
//      }
//    }
@mixin modifier($name, $value: null) {

  @if (& == null) {
    @error "modifier cannot be declared ouside of a block"
  }

  @at-root {
    #{make-BEM-modifier-selector($name, $value, is-BEM-elem(&))} {
      @content;
    }
  }
}
