// ========================================
// 
//       Functions - BEM-SASS Struct
//
// =======================================

// Getter: bem-sass struct 
// @return { Map } the bem-sass struct
@function get-bem-sass() { 
  @if not is-bem-sass-initialized() {
    @return null;
  } 
  @return $__bem-sass__;
}


// Setter: bem-sass struct
// @param  { * } value - a value
// @return { Boolean }
@function set-bem-sass($value) {
  @if not is-bem-sass-initialized() {
    @error "bem-sass is not initialized";
  } 
  $__bem-sass__: $value !global;
  @return true;
} 


// Check if a value exists in a bem-sass struct attribute
// @param  { String } attr - attribute name
// @param  { * } value - a value
// @return { Boolean }
@function bem-sass-exists($attr, $value) {
  @each $item in bem-sass-get($attr) {
    @if $item == $value {
      @return true;
    }
  }
  @return false;
}


// Get bem-sass attribute
// @param  { Argument List } attrs - attribute names
// @return { * } the attribute
@function bem-sass-get($attrs...) {
  @return (
    is-bem-sass-initialized() and 
    map-deep-get(get-bem-sass(), $attrs...)
  );
} 


// Set bem-sass attribute
// @param  { List } attrs - attribute as list
// @param  { * } a value
// @return { Boolean } 
@function bem-sass-set($attrs, $value) {
  @if (set-bem-sass(map-deep-set(get-bem-sass(), $attrs, $value))) {
    @return true;
  } @else {
    @return false;
  }
}


// Add element to bem-sass attribute(list)
// @param { String } attr - attribute name
@function bem-sass-add($attr, $value) {

  @if type-of(bem-sass-get($attr)) != "list" {
    @error "#{$attr} is not a list";
  }

  @if type-of($value) == "string" {
    $value: unquote($value);
  }

  @if bem-sass-set($attr, append(bem-sass-get($attr), $value)) {
    @return true;
  }

  @return false;
} 


// Check if bem-sass is initialized or not
// @return { Boolean }
@function is-bem-sass-initialized() {
  @if (variable-exists("__bem-sass__")) {
    @return true;
  } 
  @return false;
}
