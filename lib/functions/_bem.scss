// ==============================
// 
//        Functions - BEM
//
// ============================== 

// Get BEM block selector(e.g "b-block") 
// from given selector list
// @param { List } the selector list
// @return { List | Unquoted String } the BEM block selector
@function get-BEM-block($selector) {

  @if is-BEM-block($selector) {
    @return $selector;
  } 

  @return (
    slice-off-BEM-block(
      inspect($selector)
    )
  )
}

// Extract BEM block 
// from given selector string
// @param   { String } the selector as string
// @return  { Unquoted String } selector as unquoted string
@function slice-off-BEM-block($selector-string) {
  @return (
    unquote(
      str-slice(
        $selector-string,
        1,
        sep-start-point($selector-string)
      )
    )
  )
}


// Get an index of the first elem/modifier separator
// from a given selector string
// @param   { String } the selector as string
// @return  { Number } index of the separator
@function sep-start-point($selector-string) {
  @if (str-index($selector-string, "_")) {
    @return str-index($selector-string, "_") - 1;
  }
  @return null; 
}


// Check if a given selector is a BEM block or not
// @param  { List } the selector
// @return { Boolean }
@function is-BEM-block($selector) {
  @return (
    not(is-BEM-mod($selector) or is-BEM-elem($selector))
  )
} 


// Check if a given selector is a BEM modifier or not
// @param  { List } the selector
// @return { Boolean }
@function is-BEM-mod($selector) {
  @if (str-index(inspect($selector), "_")) {
    @return true;
  }
  @return false;
}


// Check if a given selector is a BEM element or not
// @param  { List } the selector
// @return { Boolean }
@function is-BEM-elem($selector) {
  @if (str-index(inspect($selector), "__")) {
    @return true;
  }
  @return false;
}
