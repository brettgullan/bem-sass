// ==============================
// 
//        Functions - BEM
//
// ============================== 

// Get BEM block selector(e.g "b-block") 
// from given selector list
// @param { List } the given selector list
// @return { List | Unquoted String } the BEM block selector
@function get-BEM-block($selector) {

  @if is-BEM-block($selector) {
    @return $selector; //TODO
  } 

  @return (
    extract-root-block(
      inspect($selector)
    )
  )
}

// Extract root block string 
// from given selector string using slice
// @param   { String } selector as string
// @return  { Unquoted String } selector as unquoted string
@function extract-root-block($selector-string) {
  @return (
    unquote(
      str-slice(
        $selector-string,
        1,
        sep-start-point($selector-string)
      )
    )
  )
}

// Check if the given selector is a BEM block or not
// @param  { List } the given selector
// @return { Boolean }
@function is-BEM-block($selector) {
  @return (
    not(is-BEM-mod($selector) or is-BEM-elem($selector))
  )
} 

// Get the separator index of 
// the given selector string(BEM element / modifier)
// @param   { String } the selector string
// @return  { Number } index of the separator
@function sep-start-point($selector-string) {
  @if (str-index($selector-string, "_")) {
    @return str-index($selector-string, "_") - 1;
  }
  @return null; 
}

// Check if the given selector is a BEM modifier or not
// @param  { List } the given selector
// @return { Boolean }
@function is-BEM-mod($selector) {
  @if (str-index(inspect($selector), "_")) {
    @return true;
  }
  @return false;
}

// Check if the given selector is a BEM element or not
// @param  { List } the given selector
// @return { Boolean }
@function is-BEM-elem($selector) {
  @if (str-index(inspect($selector), "__")) {
    @return true;
  }
  @return false;
}
